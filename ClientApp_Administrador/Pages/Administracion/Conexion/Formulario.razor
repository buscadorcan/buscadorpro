@attribute [Route(Routes.NUEVO_CONEXION)]
@attribute [Route(Routes.EDITAR_CONEXION)]
@layout AdminLayout
@using Microsoft.AspNetCore.Authorization
@using SharedApp.Data
@using SharedApp.Dtos
@attribute [Authorize]
@inject NavigationManager NavigationManager

@*
    /// <summary>
    /// Page: Formulario Conexion
    /// Concepto: Formulario que permite registrar o editar las conexiones hacia otros servidores.
    /// Tipo: EXCEL, MSSQLSERVER, MYSQL, POSTGREST, SQLLITE
    /// </summary>
*@
<PageTitle>Formulario Conexion</PageTitle>

<EditForm Model="conexion" OnValidSubmit="RegistrarConexion">
	<DataAnnotationsValidator />

	<!-- Título -->
	<div class="ds-title-section">
		<h2 class="ds-title-h2">Administración <span>Conexión al origen de datos</span></h2>
	</div>

	<div class="ds-content-section full">

		<div class="row" style="margin-top: 2% !important;">
			<div class="col-6">
				<label class="label valign-text-middle inter-regular-normal-comet-16px">Sistema</label>
				<select class="form-control inter-regular-normal-comet-14px" @bind="conexion.IdONA" style="margin-top: 2% !important;">
					<option value= Constantes.VACIO>Seleccione una organización</option>
					@if (listaOrganizaciones != null)
					{
						@foreach (var organizacion in listaOrganizaciones)
						{
							<option value="@organizacion.IdONA">@organizacion.RazonSocial</option>
						}
					}
				</select>
				<ValidationMessage For="(() => conexion.IdONA)" />
			</div>
			<div class="col-6">
				<label class="label valign-text-middle inter-regular-normal-comet-16px">Origen de Datos</label>
				<select class="form-control inter-regular-normal-comet-14px" @onchange="CambiarSeleccionMotor" value="@conexion.OrigenDatos" style="margin-top: 2% !important;">
					<option value= Constantes.VACIO>Seleccionar Motor de Base Datos</option>
					@foreach (var databaseType in Enum.GetValues(typeof(DatabaseType)))
					{
						<option value="@databaseType">@databaseType</option>
					}
				</select>
				<ValidationMessage For="(() => conexion.OrigenDatos)" />
			</div>

			<div class="col-6">
				<label class="label valign-text-middle inter-regular-normal-comet-16px">Nombre Base de Datos</label>
					<InputText @bind-Value="conexion.BaseDatos" class="form-control inter-regular-normal-comet-14px" placeholder="BaseDatos..." style="margin-top: 2% !important;" />
					<ValidationMessage For="(() => conexion.BaseDatos)" />
			</div>

			<div class="col-6">
				<label class="label valign-text-middle inter-regular-normal-comet-16px">Host</label>
					<InputText @bind-Value="conexion.Host" class="form-control inter-regular-normal-comet-14px" placeholder="Host..." style="margin-top: 2% !important;" />
					<ValidationMessage For="(() => conexion.Host)" />
			</div>

			<div class="col-6">
				<label class="label valign-text-middle inter-regular-normal-comet-16px">Puerto</label>
					<InputNumber @bind-Value="conexion.Puerto" style="margin-top: 2% !important;"
								 class="form-control inter-regular-normal-comet-14px"
								 placeholder="Puerto..."
								 oninput="if (this.value.length > 6) this.value = this.value.slice(0, 6);
                              this.value = this.value.replace(/[^0-9]/g, '');" />
					<ValidationMessage For="(() => conexion.Puerto)" />
			</div>

			<div class="col-6">
					<label class="label valign-text-middle inter-regular-normal-comet-16px">Usuario</label>
					<InputText @bind-Value="conexion.Usuario" class="form-control inter-regular-normal-comet-14px" placeholder="Usuario..." style="margin-top: 2% !important;" />
					<ValidationMessage For="(() => conexion.Usuario)" />
			</div>
			<div class="col-6">
					<label class="label valign-text-middle inter-regular-normal-comet-16px">Contraseña</label>
					<InputText @bind-Value="conexion.Contrasenia" class="form-control inter-regular-normal-comet-14px" placeholder="Contrasenia..." type="password" id="password" style="margin-top: 2% !important;" />
					<ValidationMessage For="(() => conexion.Contrasenia)" />
			</div>

			<div class="form-group py-2">
				<ValidationMessage For="(() => conexion.Migrar)" />
				<label class="label valign-text-middle inter-regular-normal-comet-16px">Migración</label>
				<Switch @bind-Value="isMigrar" Label="Seleccione una opción" Class="label valign-text-middle inter-regular-normal-comet-16px" style="margin-top: 2% !important;" />
				<div class="mt-3"><b class="inter-regular-normal-comet-16px">@(isMigrar ? Constantes.SI_LITERAL : Constantes.NO_LITERAL)</b></div>
				<ValidationMessage For="(() => conexion.Migrar)" />
			</div>

			<div class="col-6">
					@foreach (var item in lista)
					{
						<Icon Name="IconName.CheckAll" Size="IconSize.x2" />
						<label class="label valign-text-middle inter-regular-normal-comet-16px">
							@item.MostrarWeb
						</label>
					}
			</div>
		</div>
	</div>

	<div class="ds-buttons-content">
		<a @onclick="Regresar">
			<div class="ds-btn-general ds-btn-red">
				<img class="icons" src="admin/img/icons.svg" alt="Icons">
				<div class="button-1 headingheadline4-h4">Regresar</div>
			</div>
		</a>
		<div class="save-button-container">
			<Button @ref="saveButton" type="ButtonType.Submit" class="ds-btn-general ds-btn-blue">
				<div class="button-3 headingheadline4-h4">Guardar</div>
			</Button>
		</div>
	</div>

</EditForm>

