@using SharedApp.Dtos
@inject IJSRuntime JSRuntime
@using OfficeOpenXml
@using System.IO
@using System.Text
@using iTextSharp.text
@using iTextSharp.text.pdf

<div class="ds-title-section">
    <div class="ds-buttons-content">
        <!-- Botón Exportar a Excel -->
        <a href="javascript:void(0)" class="ds-btn-general ds-btn-blue" @onclick="ExportarExcel">
            <img src="images/admin/ico-excel-blue.svg"
                 width="19" height="19"> Excel
        </a>
        <!-- Botón Exportar a PDF -->
        <a href="javascript:void(0)" class="ds-btn-general ds-btn-red" @onclick="ExportarPDF">
            <img src="images/admin/ico-file-pdf-ref.svg"
                 width="19" height="19">PDF
        </a>
    </div>
</div>

<div class="modal-scroll">
    <div class="table-responsive">
        <table class="general table">
            <thead>
                <tr>
                    @foreach (var column in new[]
                    {
                    (nameof(HomologacionDto.NombreHomologado), "Vista Código Homologado"),
                    (nameof(HomologacionDto.MostrarWeb), "Texto a Mostrar en la Web"),
                    (nameof(HomologacionDto.TooltipWeb), "Tooltip Web"),
                    (nameof(HomologacionDto.Mostrar), "Mostrar"),
                    (nameof(HomologacionDto.MascaraDato), "Tipo de Dato"),
                    (nameof(HomologacionDto.SiNoHayDato), "Si No Hay Dato")
                    })
                    {
                        <th @onclick="() => OrdenarPor(column.Item1)">
                            @column.Item2 @(sortColumn == column.Item1 ? (sortAscending ? Constantes.FLECHA_ARRIBA : Constantes.FLECHA_ABAJO) : Constantes.VACIO)
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @if (PaginatedItems != null && PaginatedItems.Any())
                {
                    @foreach (var item in PaginatedItems)
                    {
                        var homologacion = listaVwHomologacion?.FirstOrDefault(c => c.IdHomologacion == item.IdHomologacion);

                        <tr>
                            <td title="@homologacion?.NombreHomologado">@homologacion?.NombreHomologado</td>
                            <td title="@homologacion?.MostrarWeb">@homologacion?.MostrarWeb</td>
                            <td title="@homologacion?.TooltipWeb">@homologacion?.TooltipWeb</td>
                            <td>
                                @((MarkupString)(homologacion?.Mostrar == Constantes.SUSPENDIDO
                                    ? "<span class='estado-activo'>✔</span>"
                                    : "<span class='estado-inactivo'>✖</span>"))
                            </td>
                            <td title="@homologacion?.MascaraDato">@homologacion?.MascaraDato</td>
                            <td title="@homologacion?.SiNoHayDato">@homologacion?.SiNoHayDato</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="8">No hay datos disponibles.</td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="pagination-container">
            <button class="btn btn-primary btn-sm" @onclick="PreviousPage" disabled="@(!CanGoPrevious)">⏪</button>
            <span class="pagination-text inter-regular-normal-comet-14px">Página @CurrentPage de @TotalPages</span>
            <button class="btn btn-primary btn-sm" @onclick="NextPage" disabled="@(!CanGoNext)">⏩</button>
        </div>
    </div>


</div>
